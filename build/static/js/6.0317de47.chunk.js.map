{"version":3,"sources":["views/LoginView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","mapDispatchToProps","onLogin","authOperations","logIn","connect","useState","email","password","user","setUser","handleUserChange","event","inputName","currentTarget","name","inputValue","value","prev","style","fontFamily","onSubmit","e","preventDefault","autoComplete","type","onChange","marginTop","variant","color"],"mappings":"mOAMMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAyElB,IAAMC,EAAqB,CACzBC,QAASC,IAAeC,OAEXC,sBAAQ,KAAMJ,EAAdI,EAxEf,YAAiC,IAAZH,EAAW,EAAXA,QAAW,EAUNI,mBAAS,CAC/BC,MAAO,GACPC,SAAU,KAZkB,mBAUvBC,EAVuB,KAUjBC,EAViB,KAexBC,EAAmB,SAACC,GACxB,IAAIC,EAAYD,EAAME,cAAcC,KAChCC,EAAaJ,EAAME,cAAcG,MACrCP,GAAQ,SAACQ,GAAD,mBAAC,eACJA,GADG,kBAELL,EAAYG,QAYjB,OACE,gCACE,oBAAIG,MAAO,CAAEC,WAAY,UAAzB,mBAEA,uBAAMC,SAZW,SAACC,GACpBA,EAAEC,iBACFrB,EAAQ,CAAEK,MAAOE,EAAKF,MAAOC,SAAUC,EAAKD,WAC5CE,EAAQ,CACNH,MAAO,GACPC,SAAU,MAOoBW,MAAOzB,EAAOC,KAAM6B,aAAa,MAA/D,UACE,cAAC,IAAD,CACE3B,MAAM,UACN4B,KAAK,QACLV,KAAK,QACLE,MAAOR,EAAKF,MACZmB,SAAUf,IAEZ,cAAC,IAAD,CACEd,MAAM,YACN4B,KAAK,WACLV,KAAK,WACLE,MAAOR,EAAKD,SACZkB,SAAUf,IAEZ,uBACA,cAAC,IAAD,CACEQ,MAAO,CAAEQ,UAAW,IACpBF,KAAK,SACLG,QAAQ,YACRC,MAAM,UAJR","file":"static/js/6.0317de47.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"../redux/auth/auth-operations\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n};\n\nfunction LoginView({ onLogin }) {\n  /*   const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleEmailChange = (event) => {\n    setEmail(event.currentTarget.value);\n  };\n  const handlePasswordChange = (event) => {\n    setPassword(event.currentTarget.value);\n  }; */\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleUserChange = (event) => {\n    let inputName = event.currentTarget.name;\n    let inputValue = event.currentTarget.value;\n    setUser((prev) => ({\n      ...prev,\n      [inputName]: inputValue,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onLogin({ email: user.email, password: user.password });\n    setUser({\n      email: \"\",\n      password: \"\",\n    });\n  };\n  return (\n    <div>\n      <h1 style={{ fontFamily: \"Roboto\" }}>Login</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <TextField\n          label=\"E-mail:\"\n          type=\"email\"\n          name=\"email\"\n          value={user.email}\n          onChange={handleUserChange}\n        />\n        <TextField\n          label=\"Password:\"\n          type=\"password\"\n          name=\"password\"\n          value={user.password}\n          onChange={handleUserChange}\n        />\n        <br />\n        <Button\n          style={{ marginTop: 25 }}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          SIGN IN ðŸŸ©\n        </Button>\n      </form>\n    </div>\n  );\n}\n\n//Full version\n/* const mapDispatchToProps = dispatch=>{\n  onSubmit: (data)=>dispatch (authOperations.register(data))\n} */\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\nexport default connect(null, mapDispatchToProps)(LoginView);\n"],"sourceRoot":""}